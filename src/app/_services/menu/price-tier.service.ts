import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
import { ISite } from 'src/app/_interfaces';
import { IPriceTierPaged, PriceTiers } from 'src/app/_interfaces/menu/price-categories';
import { AuthenticationService } from '..';
import { IPagedList, SearchModel } from '../system/paging.service';

// Generated by https://quicktype.io

@Injectable({
  providedIn: 'root'
})
export class PriceTierService {

  price : PriceTiers

  constructor( private http: HttpClient,
    private auth: AuthenticationService,
    private _fb: FormBuilder,
   )
  { }


  deletePriceTier(site: ISite, id: number): Observable<PriceTiers> {

    const endpoint = "/PriceTiers/"

    const parameters = "DeletePriceTier"

    const url = `${site.url}${endpoint}${parameters}`

    return  this.http.delete<PriceTiers>(url)

  }

  getPriceTiers(site: ISite): Observable<PriceTiers[]> {

    const endpoint = "/PriceTiers/"

    const parameters = "GetPriceTiers"

    const url = `${site.url}${endpoint}${parameters}`

    return  this.http.get<PriceTiers[]>(url)

  };


  getPriceTier(site: ISite, id: number): Observable<PriceTiers> {

    const endpoint = "/PriceTiers/"

    const parameters = `GetPriceTier?id=${id}`

    const url = `${site.url}${endpoint}${parameters}`

    return  this.http.get<PriceTiers>(url)

  };

  putPriceTier(site: ISite, price: PriceTiers): Observable<PriceTiers> {

    const endpoint = "/PriceTiers/"

    const parameters = "putPriceTiers"

    const url = `${site.url}${endpoint}${parameters}`

    return  this.http.put<PriceTiers>(url, price)

  };


  postPriceTier(site: ISite, price: PriceTiers): Observable<PriceTiers> {

    const endpoint = "/PriceTiers/"

    const parameters = "postPriceTiers"

    const url = `${site.url}${endpoint}${parameters}`

    return  this.http.post<PriceTiers>(url, price)

  };

  savePriceTier(site: ISite, price: PriceTiers) : Observable<PriceTiers> {

    if (price.id) {
      return  this.postPriceTier(site, price)
    }

    if (!price.id) {
      return this.putPriceTier(site, price)
    }

  }

  searchPriceTiers(site: ISite, searchModel: SearchModel): Observable<IPriceTierPaged> {
    const endpoint = "/PriceTiers/"

    const parameters = "searchPriceTiers"

    const url = `${site.url}${endpoint}${parameters}`

    return  this.http.post<IPriceTierPaged>(url, searchModel)
  }





}
