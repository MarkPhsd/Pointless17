@use '@angular/material' as mat;
@include mat.legacy-core();
@include mat.all-legacy-component-typographies();

// @import "../../../node_modules/@angular/material/legacy-prebuilt-themes/legacy-deeppurple-amber.css";

// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`

// @include mat.legacy-core();
// @include mat.all-legacy-component-typographies();


// Define the color configurations for the light theme
$light-theme-primary: mat.define-palette(mat.$indigo-palette);
$light-theme-accent: mat.define-palette(mat.$light-blue-palette, 700, 300, 900);
$light-theme-warn: mat.define-palette(mat.$deep-orange-palette, A200);

$light-theme: mat.define-light-theme((
  color: (
    primary: $light-theme-primary,
    accent:  $light-theme-accent,
    warn:    $light-theme-warn,
  ),
  typography: mat.define-legacy-typography-config(),
  density: 0,
));

.light-theme {
  @include mat.all-legacy-component-themes($light-theme);
}

// Define the color configurations for the dark theme
$dark-theme-primary: mat.define-palette(mat.$blue-grey-palette);
$dark-theme-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);
$dark-theme-warn: mat.define-palette(mat.$deep-orange-palette);

// Define the dark theme
$dark-theme: mat.define-dark-theme((
  color: (
    primary: $dark-theme-primary,
    accent: $dark-theme-accent,
    warn: $dark-theme-warn,
  ),
  typography: mat.define-legacy-typography-config(),
  density: 0,
));

@mixin dark-theme-accordion {
  .mat-accordion {
    background-color: mat.get-color-from-palette(mat.$grey-palette, 850) !important;
    color: mat.get-color-from-palette(mat.$grey-palette, 50) !important;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.6);
  }

  .mat-expansion-panel {
    background-color: mat.get-color-from-palette(mat.$grey-palette, 800) !important;
    color: mat.get-color-from-palette(mat.$grey-palette, 50) !important;
    transition: background-color 0.3s;

    &:hover {
      background-color: mat.get-color-from-palette(mat.$grey-palette, 750) !important;
    }
  }

  .mat-expansion-panel-header {
    background-color: mat.get-color-from-palette(mat.$grey-palette, 770) !important;
    color: mat.get-color-from-palette(mat.$grey-palette, 50) !important;
    font-weight: 500;
    transition: background-color 0.3s;

    // Ensure all child elements in the header inherit the light color
    .mat-expansion-panel-header-title,
    .mat-expansion-panel-header-description,
    .mat-icon {
      color: mat.get-color-from-palette(mat.$grey-palette, 50) !important; // Light color for text and icons
    }

    &:hover {
      background-color: mat.get-color-from-palette(mat.$grey-palette, 740) !important; // Darker background for highlighted effect
      box-shadow: none; // Remove shadow
    }
  }

  .mat-expansion-panel-content {
    background-color: mat.get-color-from-palette(mat.$grey-palette, 790) !important;
    color: mat.get-color-from-palette(mat.$grey-palette, 50) !important;
  }
}


// @mixin dark-theme-accordion {
//   .mat-accordion {
//     background-color: mat.get-color-from-palette(mat.$grey-palette, 850) !important;
//     color: mat.get-color-from-palette(mat.$grey-palette, 50) !important; // Theme-based light color
//     box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.6);
//   }

//   .mat-expansion-panel {
//     background-color: mat.get-color-from-palette(mat.$grey-palette, 800) !important;
//     color: mat.get-color-from-palette(mat.$grey-palette, 50) !important;
//     transition: background-color 0.3s;

//     &:hover {
//       background-color: mat.get-color-from-palette(mat.$grey-palette, 750) !important;
//     }
//   }

//   .mat-expansion-panel-header {
//     background-color: mat.get-color-from-palette(mat.$grey-palette, 770) !important;
//     color: mat.get-color-from-palette(mat.$grey-palette, 50) !important;
//     font-weight: 500;
//     transition: background-color 0.3s, box-shadow 0.3s;

//     &:hover {
//       background-color: mat.get-color-from-palette(mat.$grey-palette, 750) !important;
//       box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);
//     }
//   }

//   .mat-expansion-panel-content {
//     background-color: mat.get-color-from-palette(mat.$grey-palette, 790) !important;
//     color: mat.get-color-from-palette(mat.$grey-palette, 50) !important; // Theme-based light color
//   }
// }



// Apply dark theme to Material components
.dark-theme {
  @include mat.all-legacy-component-themes($dark-theme);
  // Apply global background and text colors
  body & {
    background-color: mat.get-color-from-palette(mat.$grey-palette, 900) !important;
    color: mat.get-color-from-palette(mat.$grey-palette, 50) !important;
  }

  @include dark-theme-accordion;

  --mat-drawer-bg-color: #{mat.get-color-from-palette(mat.$grey-palette, 800)};

  // Apply default mat-app-background for all other components
  .mat-app-background {
    background-color: mat.get-color-from-palette(mat.$grey-palette, 850) !important;
    color: mat.get-color-from-palette(mat.$grey-palette, 50) !important;
  }
}


// $my-dark-theme: mat.define-dark-theme((
//   color: (
//     primary: mat.define-palette(blue),
//     accent: mat.define-palette(amber),
//     warn: mat.define-palette(red),
//   )
// ));

// @include mat.all-component-themes($my-dark-theme);
