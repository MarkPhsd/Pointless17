// Generated by https://quicktype.io
import { IPagedList } from "src/app/_services/system/paging.service";

export interface IPriceCategoryPaged {

  results      : IPriceCategories[]
  paging       : IPagedList

}



export interface IPriceCategories {
  id:            number;
  name:          string;
  uid:           string;
  productPrices: ProductPrice[];
}

export interface IPriceCategory2 {
  id:            number;
  name:          string;
  uid:           string;
}

export interface ProductPrice {
  id:               number;
  priceCategoryID:  number;
  retail:           number;
  wholeSale:        number;
  unitTypeID:       number;
  price1:           number;
  price2:           number;
  price3:           number;
  hideFromMenu:     number;
  useforInventory:  number;
  pizzaMultiplier:  number;
  unitPartRatio:    number;
  partMultiplyer:   number;
  doNotDelete:      number;
  pizzaSize:        number;
  priceType:        number;
  barcode:          string;
  itemQuantity:     number;
  productID:        number;
  tierPriceGroup:   number;
  price4:           number;
  price5:           number;
  price6:           number;
  price7:           number;
  price8:           number;
  price9:           number;
  price10:          number;
  timeBasedPrice:   number;
  uid:              string;
  weekDays:         string;
  endTime:          string;
  startTime:        string;
  webEnabled:       number;
  specialDatePrice: number;
  startDate:        string;
  endDate:          string;
  priceTiers:       PriceTiers;
  unitType:         number;
  gramPrice:        number;
  eightPrice:       number;
  quarterPrice:     number;
  halfOuncePrice:   number;
  ouncePrice:       number;
}

export interface IPriceTierPaged {

  results      : PriceTiers[]
  paging       : IPagedList
}

export interface PriceTiers {
  id:              number;
  name:            string;
  uid:             string;
  webEnabled:      number;
  priceTierPrices: PriceTierPrice[];
}

export interface PriceTierPrice {
  id:             number;
  productPriceID: number; //pricetier
  quantityFrom:   string;
  quantityTo:     string;
  retail:         string;
  price1:         string;
  price2:         string;
  price3:         string;
  price4:         string;
  price5:         string;
  price6:         string;
  price7:         string;
  price8:         string;
  price9:         string;
  startTime:      string;
  endTime:        string;
  specialPrice:   string;
  weekDays:       string;
  flatQuantity:   string;
  priceName:      string;
  rateOrPrice:    boolean;
}



export interface UnitType {
  id:               number;
  name:             string;
  unitNote:         string;
  unitCategory:     string;
  unitMultipliedTo: number;
  unitMultiplyer:   number;
  mainUnit:         number;
  isMainUnit:       boolean;
  itemMultiplier:   number;
  doNotDelete:      number;
  abbreviation:     string;
  plural:           string;
  milileters:       number;
  fluidOunces:      number;
  massOunces:       number;
  grams:            number;
  unitID:           number;
  uid:              string;
}

export interface IUnitTypePaged {

  results      : UnitType[]
  paging       : IPagedList

}

 export interface ProductPrice2 {
  id:               number;
  priceCategoryID:  number;
  retail:           number;
  wholeSale:        number;
  unitTypeID:       number;
  price1:           number;
  price2:           number;
  price3:           number;
  hideFromMenu:     number;
  useforInventory:  number;
  pizzaMultiplier:  number;
  unitPartRatio:    number;
  partMultiplyer:   number;
  doNotDelete:      number;
  pizzaSize:        number;
  priceType:        number;
  barcode:          string;
  itemQuantity:     number;
  productID:        number;
  tierPriceGroup:   number;
  price4:           number;
  price5:           number;
  price6:           number;
  price7:           number;
  price8:           number;
  price9:           number;
  price10:          number;
  timeBasedPrice:   number;
  uid:              string;
  weekDays:         string;
  endTime:          string;
  startTime:        string;
  webEnabled:       number;
  specialDatePrice: number;
  startDate:        string;
  endDate:          string;
}
