{"version":3,"mappings":"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","names":["Reorder","constructor","hostRef","registerInstance","this","onClick","ev","reorderGroup","el","closest","preventDefault","disabled","stopImmediatePropagation","render","mode","getIonMode","reorderIcon","h","Host","class","name","lazy","part","getElement","style","ios","md","ReorderGroup","ionItemReorder","createEvent","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabledChanged","gesture","enable","connectedCallback","contentEl","t","scrollEl","getScrollElement","Promise","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","onMove","onEnd","disconnectedCallback","destroy","undefined","complete","listOrReorder","resolve","completeSync","selectedItemEl","reorderEl","target","event","item","findReorderItem","data","heights","length","children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","hapticSelectionStart","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","normalizedY","toIndex","itemIndexForTop","fromIndex","hapticSelectionChanged","reorderMove","transform","emit","from","to","bind","hapticSelectionEnd","len","ref","insertBefore","Array","isArray","reorderArray","transition","remove","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","element","node","container","parent","parentElement","array","splice","slice"],"sources":["./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host, i as getElement, e as createEvent } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-27b3f981.js';\n\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px}.reorder-icon{font-size:34px;opacity:0.4}\";\n\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px}.reorder-icon{font-size:31px;opacity:0.3}\";\n\nconst Reorder = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  onClick(ev) {\n    const reorderGroup = this.el.closest('ion-reorder-group');\n    ev.preventDefault();\n    // Only stop event propagation if the reorder is inside of an enabled\n    // reorder group. This allows interaction with clickable children components.\n    if (!reorderGroup || !reorderGroup.disabled) {\n      ev.stopImmediatePropagation();\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    const reorderIcon = mode === 'ios' ? 'reorder-three-outline' : 'reorder-two-sharp';\n    return (h(Host, { class: mode }, h(\"slot\", null, h(\"ion-icon\", { name: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\" }))));\n  }\n  get el() { return getElement(this); }\n};\nReorder.style = {\n  ios: reorderIosCss,\n  md: reorderMdCss\n};\n\nconst reorderGroupCss = \".reorder-list-active>*{-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\n\nconst ReorderGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0 /* Idle */;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n    this.disabled = true;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async connectedCallback() {\n    const contentEl = this.el.closest('ion-content');\n    if (contentEl) {\n      this.scrollEl = await contentEl.getScrollElement();\n    }\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\n      el: this.el,\n      gestureName: 'reorder',\n      gesturePriority: 110,\n      threshold: 0,\n      direction: 'y',\n      passive: false,\n      canStart: detail => this.canStart(detail),\n      onStart: ev => this.onStart(ev),\n      onMove: ev => this.onMove(ev),\n      onEnd: () => this.onEnd(),\n    });\n    this.disabledChanged();\n  }\n  disconnectedCallback() {\n    this.onEnd();\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n  complete(listOrReorder) {\n    return Promise.resolve(this.completeSync(listOrReorder));\n  }\n  canStart(ev) {\n    if (this.selectedItemEl || this.state !== 0 /* Idle */) {\n      return false;\n    }\n    const target = ev.event.target;\n    const reorderEl = target.closest('ion-reorder');\n    if (!reorderEl) {\n      return false;\n    }\n    const item = findReorderItem(reorderEl, this.el);\n    if (!item) {\n      return false;\n    }\n    ev.data = item;\n    return true;\n  }\n  onStart(ev) {\n    ev.event.preventDefault();\n    const item = this.selectedItemEl = ev.data;\n    const heights = this.cachedHeights;\n    heights.length = 0;\n    const el = this.el;\n    const children = el.children;\n    if (!children || children.length === 0) {\n      return;\n    }\n    let sum = 0;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n    const box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n    if (this.scrollEl) {\n      const scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    }\n    else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1 /* Active */;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n  }\n  onMove(ev) {\n    const selectedItem = this.selectedItemEl;\n    if (!selectedItem) {\n      return;\n    }\n    // Scroll if we reach the scroll margins\n    const scroll = this.autoscroll(ev.currentY);\n    // // Get coordinate\n    const top = this.containerTop - scroll;\n    const bottom = this.containerBottom - scroll;\n    const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    const deltaY = scroll + currentY - ev.startY;\n    const normalizedY = currentY - top;\n    const toIndex = this.itemIndexForTop(normalizedY);\n    if (toIndex !== this.lastToIndex) {\n      const fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    }\n    // Update selected item position\n    selectedItem.style.transform = `translateY(${deltaY}px)`;\n  }\n  onEnd() {\n    const selectedItemEl = this.selectedItemEl;\n    this.state = 2 /* Complete */;\n    if (!selectedItemEl) {\n      this.state = 0 /* Idle */;\n      return;\n    }\n    const toIndex = this.lastToIndex;\n    const fromIndex = indexForItem(selectedItemEl);\n    if (toIndex === fromIndex) {\n      this.completeSync();\n    }\n    else {\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeSync.bind(this)\n      });\n    }\n    hapticSelectionEnd();\n  }\n  completeSync(listOrReorder) {\n    const selectedItemEl = this.selectedItemEl;\n    if (selectedItemEl && this.state === 2 /* Complete */) {\n      const children = this.el.children;\n      const len = children.length;\n      const toIndex = this.lastToIndex;\n      const fromIndex = indexForItem(selectedItemEl);\n      if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\n        const ref = (fromIndex < toIndex)\n          ? children[toIndex + 1]\n          : children[toIndex];\n        this.el.insertBefore(selectedItemEl, ref);\n      }\n      if (Array.isArray(listOrReorder)) {\n        listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n      }\n      for (let i = 0; i < len; i++) {\n        children[i].style['transform'] = '';\n      }\n      selectedItemEl.style.transition = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      this.selectedItemEl = undefined;\n      this.state = 0 /* Idle */;\n    }\n    return listOrReorder;\n  }\n  itemIndexForTop(deltaY) {\n    const heights = this.cachedHeights;\n    let i = 0;\n    // TODO: since heights is a sorted array of integers, we can do\n    // speed up the search using binary search. Remember that linear-search is still\n    // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n    for (i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        break;\n      }\n    }\n    return i;\n  }\n  /********* DOM WRITE ********* */\n  reorderMove(fromIndex, toIndex) {\n    const itemHeight = this.selectedItemHeight;\n    const children = this.el.children;\n    for (let i = 0; i < children.length; i++) {\n      const style = children[i].style;\n      let value = '';\n      if (i > fromIndex && i <= toIndex) {\n        value = `translateY(${-itemHeight}px)`;\n      }\n      else if (i < fromIndex && i >= toIndex) {\n        value = `translateY(${itemHeight}px)`;\n      }\n      style['transform'] = value;\n    }\n  }\n  autoscroll(posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n    let amount = 0;\n    if (posY < this.scrollElTop) {\n      amount = -SCROLL_JUMP;\n    }\n    else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'reorder-enabled': !this.disabled,\n        'reorder-list-active': this.state !== 0 /* Idle */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nconst indexForItem = (element) => {\n  return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n  let parent;\n  while (node) {\n    parent = node.parentElement;\n    if (parent === container) {\n      return node;\n    }\n    node = parent;\n  }\n  return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n  const element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\nReorderGroup.style = reorderGroupCss;\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };\n"],"sourceRoot":"webpack:///","file":"4977.7d6b6a71a098676d55ab.js"}